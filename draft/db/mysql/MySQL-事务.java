
――――――――――――――――――――――――――――
MYSQL	事务				|
――――――――――――――――――――――――――――
	* 事务,非常非常的重要!
	* 描述
		一组SQL语句完成一个业务
		如果整组成功,意味所有SQL都实现
		如果其中任何一个失败,意味整合操作都失败
		既然是失败,那么整个过程是没有意义的.所有,数据库应该回到操作前的初识状态
	* 别的用户(进程/会话),是不能看到操作内数据修改的.
		* 其实就是说,当前连接会话,开启事务进行操作.如果事务未提交.那么别人的会话读取不到.
	* 有的存储引擎不支持事务,MYSQL默认INNODB引擎,支持事务
		1,默认自动提交事务,所以.直接update,delete,insert等操作都会直接影响数据库
	* 操作步骤
		1,关闭事务的自动提交
			set autocommit=1;
				//该方式,直接针对当前连接进行设置,以后的每次增删改操作,默认都是需要手动提交
		2,开启事务
			START TRANSACTION;
				//该方式,针对单次操作.每次操作都手动开启事务!
				//直接开启事务,可以无视系统的事务提交策略
				//其实用begin也是可以的,但是不建议
		3,执行操作
			UPDATE ...
			UPDATE ...
			DELETE ...
		4,提交事务 OR 回滚事务
			COMMIT;		//提交事务
			ROLLBACK;	//回滚事务

	*查看当前事务提交策略
		SHOW VARIABLES LIKE 'autocommit';
		+---------------+-------+
		| Variable_name | Value |
		+---------------+-------+
		| autocommit    | OFF   |
		+---------------+-------+
		* OFF,表示已经关闭了自动提交
		* ON ,表示开启了事务自动提交
		
――――――――――――――――――――――――――――――――
旧笔记	―― 催希凡				|
――――――――――――――――――――――――――――――――
事物的特性(ACID)
	(Atomicity)	原子性,不可分割(要么全成功,要么全失败)
	(Consistency)一致性,数据执行前后,保持一致(如转账业务,不论成功与否.参与转账的两个帐号的余额之和是不变的)
	(Isolation)隔离性,多个事物并发操作,隔离开(在并发操作中,不同事物之间应该隔离开来,使每个并发中的事物不会相互干扰)
	(Durablility)持久性,数据库操作完毕之后(一旦事物提交成功,事物中所有的数据操作都必须被持久化到数据库中,及时提交数据事物后,数据库马上崩溃,在数据库重启时也必须能保证通过某种机制恢复数据)

-------------------
start transaction -- 事物开始 


commit/rollback   -- 提交事物/回滚


JDBC中处理事物,都是通过一个对象！Connection来完成的！
setAutoCommit(boolean);//设置是否自动提交事物,如果是true(默认为true),表示自动提交！也就是每条执行的SQL语句偶是一个单独的事物。
	如果为false,那么就相当于开始了事物(conn.setAutoCommit(false);表示开启事物)
commit();//提交结束事物(con.commit();表示提交事物)
rollback();//回滚结束事物(con.rollback();表示回滚事物)

同一事务中,所有的操作。都在使用同一个Connection对象

JDBC处理事务的代码格式
try
{
	conn.setAutoCommit(false);//开启事物
	... 
	...
	...
	conn.commit();//try语句的最后提交事务
}
catch(Exception e)
{
	conn.rollback();//回滚事务
}


***********事物的隔离级别
	多个事物并发执行时才需要考虑并发事务
1,事物的并发读问题
	* 脏读:读取到另一个事务未提交的数据
	* 不可重复读:两次读的不一致
	* 幻读(虚读):读到另一事务已提交的数据.对同一张表的两次查询不一致,因为另一事务插入了一条记录
----
四大隔离级别
4个等级的事物隔离级别,在相同的输入,执行相同的工作,根据不同的隔离级别,可以导致不同的结果。不同的事务隔离级别能够解决数据并发问题的能力是不同的.
1,Serializable(串行化)(坚决不用)
	* 不会出现任何问题,因为它对同一数据的访问是串行的,并非并发访问的！
	* 性能最差(能处理任何问题)
2,Repeatable read(可重复读取)(MYSQL默认)
	* 防止脏读和不可重复读,不能处理幻读问题
	* 性能比 Serializable 好
3,Read Committed(读已提交数据)(Oracle默认)
	* 防止脏读和不可重复读,没有处理不可重复读,也没处理幻读
	* 性能别Serializable好
4,Read Uncommitted 读未提交数据(坚决不用)
	* 可以出现任何事务并发问题,没有处理任何问题.隔离级别最烂
	* 性能最好

查看数据库的隔离级别
select @@tx_isolation   
MYSQL的默认隔离级别(一般没有必要去修改)
+-----------------+
| @@tx_isolation  |
+-----------------+
| REPEATABLE-READ |
+-----------------+
修改数据库的隔离级别
settransaction isolationlevel [四个隔离级别选一个]

JDBC设置隔离级别
Connection conn
conn.setTransactionlsolation(int leve);
参数可选值如下
Connection.TRANSACTION_READ_UNCOMMITTED
Connection.TRANSACTION_READ_COMMITTED
... ... 静态变量,字段参阅API
