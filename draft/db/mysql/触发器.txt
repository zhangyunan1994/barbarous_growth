

   在当前的表上,设置一个对每行数据的一个监听器,监听相关的事件
每当事件发生时,会执行一段由sql完成的一段功能代码

一个触发器必须的元素
1,事件
2,执行代码

创建触发器
	create trigger 名称 '时机'事件 on 表名 for each row 执行性代码
	//监听了指定表的每一行

事件详解
	对数据的操作无非就是增删改查,但是只能监听插入,删除,修改...而查询是不能被监听
分别对应
insert	插入事件
delete	删除事件
update	修改事件

另外,事件还有配合'时机'一起完成,形成笛卡尔积的感觉

before	事件执行前
alfer	事件执行后

----事件的机制加上'时机',一共形成了6种MYSQL事件
before insert 
afer insert
.....
管理触发器
	删除触发器
	drop trigger 名称
	查看触发器
	show create trigger 名称

可执行性代码
无非就是SQL语句组成的


高级
	触发器中可以带有参数(数据),而这个数据可以是一个变量,可以进行更变.
	old	监听事件所在表上的数据在事件发生之前时的数据--也就是旧的数据 
	new	监听表上事件发生之后新处理完毕的数据	
create trigger 名称 '时机'事件 on 表名 for each row old.字段-new.字段;
	
	--insert 不能使用old,因为是新增,没有旧数据
	--delete 不能使用new因为删除,没有新数据

注意的地方
	1,触发器不能同名,
	2,目前MYSQL只支持一类事件设置一个触发器
		* 当一个表绑定了一个事件,就不能再绑定另一个事件
		* 但是可以给不同的事件,绑定不同的触发器
	3,如果一个触发器,处理语句有多个SQL语句组成
	   > 1,将语句组成语句块(begin - end 来标识)
	   > 2,语句块中语句需要独立的结束符 ";"
	   针对于命令行,由于触发器使用分号作为语句结束符
	   那么当命令行客户端碰到分号的时候,就应该变成触发程序内的子语句结束,而不是整个语句的结束
	   可以通过修改命令行的语句结束符达到目的
	   delimter   $$	跟SQL没关系,就是CMD窗口的命令.就让CMD以$$ 为结束符,那么命令语句中的多个分号就可以写了！
	   操作完了记得该回去啊
	   dlimter ;