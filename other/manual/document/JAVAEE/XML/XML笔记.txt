简介：
	标记型语言
	使用标签来操作
	可扩展(html的标签是固定的，而xml中的标签是可以自定义的。甚至是中文标签)
	是W3C组织发布的一个技术。有两个版本1.0和1.1。现在使用的都是1.0的版本！因为1.1的版本目前不能向下兼容(1.0的东西不能在1.1下使用)。
用途：
	xml可以显示数据，但不是主要功能(html是用于显示数据)。主要功能是为了存储数据。可以模拟小型数据库的效果。
	大体上用在三个地方：
	1,不同的系统之间传输数据 
		**QQ之间的数据传输
	2,用来表示我们生活中有关系的数据
		**中国省市的结构
	3,用在我们的配置文件中
		**数据库名称--数据库用户名--数据库密码
语法：
一个XML文件分为如下几个部分
1,文档声明
	①后缀名是.xml
	②最简单的声明,而且声明顶部不能有注释。必须写在第一行，第一列(顶死左上角)。它不属于xml元素，所以不用合闭标签
		<?xml version="1.0" ?>
2,元素
	①标签的定义
		<></>规则。有开始必须要有关闭！
		</>标签没有内容。可以直接在标签内结束。
		可以做若干子标签的嵌套。但是，必须要合理的嵌套。
			合理嵌套:<a><b></b></a>
			不合理嵌套:<a><b></a></b>
	②一个xml文档，必须仅有一个根标签。其他标签都是它的子标签。
	③xml标签中出现的所有空格跟回车。都会被当作标签内容处理。
		<网址>www.baidu.com</网址>
		<网址>
			www.baidu.com
		</网址>
		以上这个这两个代码的含义是不一样的！第二个包含了缩进table和一个回车。
	④xml中标签(元素)的命名规则
		xml标签可以是中文
		区分大小写
		不能以数字或者下划线开头
		不能以xml,XML,Xml... ...等这些标签开头。只要是带xml开头就是不可以的
		不能包含空格以及冒号(:)
	④xml中属性的要求(html跟xml都是标记型文档。可以有属性)
		一个标签上可以有多个属性
		属性名称不能相同
		属性名与属性值之间用=号相连。属性值用单引号，或者双引号引起来
		**属性的命名也遵循元素的命名规范

3,属性
	①version:xml版本(1.0/1.1)一般使用1.0
	②encoding:xml编码(GBK/UTF-8/ISO8859-1)		IOS8859-1这个编码不包含中文。中国人一般不用。老外喜欢
	③standalone:表示xml是否需要依赖其他的文件(yes/no)。这个属性用得很少。
4,中文乱码问题的解决
	①设置的编码(文档头的encoding声明)。和保存的编码要一致！
5,注释
	<!--注释内容-->
	注释不能嵌套
6,特殊字符
	如果想在xml中显示 a<b 不能正常显示。因为浏览器会把 < 当作标签解析
	就需要用到转义字符... ...很多，自己查表。
6,CDATA区
	CDATA区域里面的数据不会被浏览器解析。会被原封不动的进行输出。(如果特殊字符过多，使用转义字符就会很麻烦。所以就可以考虑用这个方法)
	<![CDATA[被原封不动输出的内容]]>
7,处理指令(processing instruction)
	简称PI。用来指挥解析引擎如何解析XML文档类容。可以给xml指定css之类的样式。
	处理指令必须以"<?"作为开头，以"?>"作为结尾。
	<?xml-stylesheet type="text/css" href="1.css"?>  (PI指令，只能对名称是英文的标签起作用。对中文形式的标签不起作用)
8,约束
	两种约束方式--单独做笔记详讲
	DTD
	schema
-----------------------
encoding 属性声明文档的字符编码
<?xml version="1.0" encoding="GBK" ?>
standalone 属性说明文档是否独立
<?xml version="1.0" encoding="GBK" standalone="yes" ?>
-----------------------XML约束
常用的约束技术
XML DTD		XML Scherma
-----------------------
XML文档中的标签属性需要通过ATTLIST为其设置属性
<!ATTLIST 元素名
	属性名1 属性值类型 设置说明
	属性名2 属性值类型 设置说明
	。。。 。。。
>
---------------------xml解析简介
*xml是标记形文档。
*js使用dom解析标记型文档
	--根据html的层级结构，在内存中分配一个树形结构。把html的标签，属性和文本都封装成对象
	--document对象,element对象,属性对象,文本对象,Node节点对象
*xml解析方式：dom  和  sax 两种解析方式(技术)
dom解析
	根据xml的层级结构。在内存中分配一个树形结构
	把xml中的每部分都封装成对象。
	使用dom方式解析xml文件的时候。如果xml文件过大。可能会造成内存溢出！
	但是dom解析。增删改很方便！
sax解析
	采用事件驱动。边读边解析！
	一行一行，从上到开始解析！解析到某个对象。把这个对象的名称/值给你返回。
	使用sax解析。不会有内存溢出的情况！可以方便的实现查询
	但是sax不能做增删改操作。
解析XML---解析器！
不同的公司和组织提供了针对这两种方式的解析器！通过API的方式提供
sun公司 ---- 针对dom和sax的解析器叫做 -- jaxp
	--这是解析的标准
dom4j组织 ---- 针对dom和sax的解析器叫做 --dom4j
	--实际开发中应用得最多，包含了下面的jdom的功能。青出于蓝而胜于蓝！
jdom组织 ---- 针对dom和sax 解析器叫做 -- jdom
	--最开始是和楼上一个公司的！后来楼上叛变了，叛变了，叛变了... ...



