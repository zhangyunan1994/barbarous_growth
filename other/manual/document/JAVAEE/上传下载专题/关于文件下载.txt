下载,就是给客户端响应字节数据
  原来我们响应的都是html页面的字符数据。
  其实就是把一个文件变成字节数组,然后使用response.getOutputStream()的一个流来响应字节数组数据

下载的要求
	* 两个头,一个流！
	响应头
	> Content-Type:image/jpeg	--给客户端传了一个图片文件
	   -- 通过文件名称调用ServletContext.getMimeType("文件路径");来获取文件类型
	> Content-Disposition:		--默认值是:inline,表示在浏览器窗口中打开(浏览器差异会有问题)
					--修改值为:attachment;filename=xxx,表示我们响应之中带了一个附件,名字叫做xxx
	   -- 在filename=后面的值,是显示在下载框中的文件名称
	流
	> 要下载的数据
	   -- 自己建议一个与文件相关的字节流对象就好

下载的细节问题
显示在下载框中的中文乱码问题
一下几个浏览器的编码问题
1,FireFox:Base64编码
   *  
2,其他大部分浏览器都使用URL编码
解决方案就是,先获取客户端浏览器版本!通过User-Agent请求头获取
然后再根据浏览器类型来进行编码处理

通用方案可以对付大部分浏览器:
	fileName = new String(fileName.getBytes("GBK"),"ISO-8859-1");
	这样子就能把文件名搞成iso-8859-1的编码作为浏览器下载框的名称显示